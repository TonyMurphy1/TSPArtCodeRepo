package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.JFileChooser;

import model.TSPImage;
import view.MainFrame;
import view.StippledImageInputFrame;
import view.TSPArtInputFrame;

public class TSPArtController implements ActionListener {

	private MainFrame mainFrame;
	private TSPImage tspimage;
	private StippledImageInputFrame stippledImageOptionsFrame;
	private TSPArtInputFrame tspImageoptionsFrame;
	
	public TSPArtController (MainFrame mainFrame) {
		this.mainFrame = mainFrame;
		tspimage = new TSPImage();
	}
	
	@Override
	public void actionPerformed(ActionEvent aE) {
		
		//TODO make image scale properly
		if (aE.getActionCommand().equals("Load Image")) {
			File image = mainFrame.showLoadFileWindow();
			if (!image.equals(null)) {
				tspimage.loadImage(image.getPath());
				mainFrame.setImage(tspimage.getOriginalImage().getScaledInstance(400, 400, 0));
				mainFrame.loadImageClicked();
			} else {
				//TODO file not loaded
			}
		} else if (aE.getActionCommand().equals("View Original Image")) {
			mainFrame.setImage(tspimage.getOriginalImage().getScaledInstance(400, 400, 0));
		} else if (aE.getActionCommand().equals("Greyscale Conversion")) {
			tspimage.convertOriginalImageToGreyscale();
			mainFrame.setImage(tspimage.getGreyScaleImage().getScaledInstance(400, 400, 0));
			mainFrame.greyscaleConversionClicked();
		} else if (aE.getActionCommand().equals("View Greyscale Image")) {
			mainFrame.setImage(tspimage.getGreyScaleImage().getScaledInstance(400, 400, 0));
		} else if (aE.getActionCommand().equals("Stipple Image")) {
			stippledImageOptionsFrame = new StippledImageInputFrame(200, 200, 10, this);
			mainFrame.setEnabled(false);
			mainFrame.stippleImageClicked();
		} else if (aE.getActionCommand().equals("View Stippled Image")) {
			mainFrame.setImage(tspimage.getCityMapImage().getScaledInstance(400, 400, 0));
		} else if (aE.getActionCommand().equals("Solve As TSP Instance")) {
			tspImageoptionsFrame = new TSPArtInputFrame(this);
		} else if (aE.getActionCommand().equals("View TSP Art Image")) {
			
		} else if (aE.getActionCommand().equals("Stipple ok")) {
			tspimage.setGrid(stippledImageOptionsFrame.getGridSize()[0], (stippledImageOptionsFrame.getGridSize()[1]));
			tspimage.setMaxCitiesInCell(stippledImageOptionsFrame.getMaxCities());
			tspimage.calculateAllCellsAverageGreyscaleValues();
			tspimage.calculateNumberOfCitiesInAllCells();
			tspimage.pickCityDistributor(0);
			tspimage.distributeCities();
			mainFrame.setImage(tspimage.getCityMapImage().getScaledInstance(400, 400, 0));
			stippledImageOptionsFrame.setVisible(false);
			mainFrame.setVisible(true);
			mainFrame.setEnabled(true);
		} else if (aE.getActionCommand().equals("Stipple cancel")) {
			stippledImageOptionsFrame.setVisible(false);
			mainFrame.setVisible(true);
			mainFrame.setEnabled(true);
		} else if (aE.getActionCommand().equals("TSP solve ok")) {
			tspimage.pickTSPSolver(0);
			tspimage.solveInstanceOfTSP();
			mainFrame.setImage(tspimage.getTSPImage().getScaledInstance(400, 400, 0));
			tspImageoptionsFrame.setVisible(false);
			mainFrame.setVisible(true);
			mainFrame.setEnabled(true);
		} else if (aE.getActionCommand().equals("TSP solve cancel")) {
			
		}
		mainFrame.repaint();
		System.out.println(mainFrame.getImageWidth());
	}
	
	public MainFrame getMainFrame() {
		return mainFrame;
	}

	public static void main(String[] args) {
		MainFrame mainFrame = new MainFrame();
		TSPArtController controller = new TSPArtController(mainFrame);
		mainFrame.setButtonsActionListener(controller);
	}
}
